#!/bin/bash
set -eu -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source
# end of bash boilerplate

safe_source $_sdir/lib/all.sh

[[ $(whoami) = "root" ]] || { sudo $0 $*; exit 0; }

show_help(){
    local script=$(basename $0)
    local reason=${1:-}
    if [[ ! -z $reason ]]; then
        cat <<REASON

    ERROR: $reason

    -------------------------------
REASON
    fi
    cat <<HELP

    Connect to 'your-essid':

    	$script your-essid

    Add a new configuration:

    	$script --add foo --password 1234 [--name alias]

    Disconnect and cleanup:

    	$script --stop

HELP
    exit
}

cmd='connect'
while :; do
    case ${1:-''} in
        -h|-\?|--help|'')
            show_help    # Display a usage synopsis.
            exit
            ;;
        --add)       # Takes an option argument; ensure it has been specified.
            shift
            cmd='add'
            essid=${1:-}
            shift
            ;;
        --password)       # Takes an option argument; ensure it has been specified.
            shift
            if [ "${1:-}" ]; then
                password=$1
                shift
            fi
            ;;
        --name)       # Takes an option argument; ensure it has been specified.
            shift
            if [ "$1" ]; then
                name=$1
                shift
            fi
            ;;
        --stop)       # Takes an option argument; ensure it has been specified.
            shift
            cmd='stop'
            break
            ;;
        *) # some other (positional?) options, break
            break 
    esac
    [[ -z ${1:-} ]] && break
done

# include hardware configuration
config=$_sdir/config.sh
if [[ ! -f $config ]]; then
    cp $config.sample $config
    chown $SUDO_USER $config
    nano $config
fi
safe_source $config


conf_dir="$_sdir/passwords.d"
if [[ $cmd = "connect" ]]; then
    essid=$1
    conf_file="${conf_dir}/$essid.conf"
elif [[ "$cmd" = "add" ]]; then
    [[ -z $essid ]] && show_help "ESSID is required"
    name=${name:-$essid}
    conf_file="${conf_dir}/${name}.conf"
    echo "Adding $name"
    $_sdir/config-wifi $essid $password $conf_file
elif [[ "$cmd" == "stop" ]]; then
    $_sdir/connect-wifi stop
    sudo ifconfig $_wlan0 down
    exit 0
fi

# connect
$_sdir/connect-wifi $_wlan0 "$conf_file"
