#!/bin/bash
set -u -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source
# end of bash boilerplate

safe_source $_sdir/lib/all.sh
set +e # do not exit on error

ts(){
    echo "[ `timestamp_log` ]"
}

period=${1:-}  # format: "hh:mm:ss"
host=${2:-}
hook="$3"
# re-align rest of the parameters
shift
shift
shift

if [[ -x $PWD/$hook ]]; then
    hook=$PWD/$hook
elif [[ -x $_sdir/$hook ]]; then
    hook=$_sdir/$hook
elif `hash $hook`; then
    true
else
    echo "Hook script is required."
    exit 1
fi

echo "Hook command to be used: $hook"

is_host_reachable(){
    is_ip_reachable "$host" "$period"
}

echo_green "`ts` Starting daemon: Host: $host, period: $period..."
connected0=true
connected=false
while true; do
    if ! is_host_reachable; then
        if [[ $connected0 = true ]] && [[ $connected = false ]]; then
            echo_red "`ts` Host seems unreachable, triggering $(basename $hook)"
            $hook "$@"
        fi
        connected0=$connected
        connected=false
    else
    	if [[ $connected0 = false ]] && [[ $connected = true ]]; then
            echo_green "`ts` Host is reachable."
        fi
        connected0=$connected
        connected=true
    fi
    sleep 5s
done
